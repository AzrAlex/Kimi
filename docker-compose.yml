version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: stockify-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: stockify
    volumes:
      - mongo_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - stockify-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Mongo Express (MongoDB Web UI)
  mongo-express:
    image: mongo-express:latest
    container_name: stockify-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - stockify-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stockify-backend
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      MONGO_URL: mongodb://admin:password123@mongo:27017/stockify?authSource=admin
      DB_NAME: stockify
      PYTHONPATH: /app
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - stockify-network
    healthcheck:
      test: curl -f http://localhost:8001/docs || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stockify-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      REACT_APP_BACKEND_URL: http://localhost:8001
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - stockify-network
    healthcheck:
      test: curl -f http://localhost/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# Networks
networks:
  stockify-network:
    driver: bridge

# Volumes
volumes:
  mongo_data:
    driver: local
  backend_uploads:
    driver: local